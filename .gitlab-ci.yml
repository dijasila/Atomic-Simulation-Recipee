image: python

stages:
- build
- style
- test
- integrationtest
- systemtest
- coverage
- release
- deploy

before_script:
- pip install pip --upgrade
- pip install -r dev-requirements.txt

# -------------- Build --------------
build:
  stage: build
  script: tox -e build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

# -------------- Style tests --------------
flake8:
  image: python:3.9
  stage: style
  script: tox -e flake8

readme:
  image: python:3.9
  stage: style
  script: tox -e readme

docs:
  image: python:3.9
  stage: style
  script: tox -e docs

# -------------- Unit tests --------------
doctest:
  image: python:3.9
  stage: test
  script: tox -e doctest

python38:
  image: python:3.8
  stage: test
  timeout: 20m
  script:
    - git clone https://gitlab.com/asr-dev/asr-test-data.git 
    - export ASR_TEST_DATA="$PWD"/asr-test-data
    - tox -e py38
  artifacts:
    paths:
      - .tox/.coverage*
    expire_in: 3 weeks

python39:
  image: python:3.9
  stage: test
  timeout: 20m
  script:
    - git clone https://gitlab.com/asr-dev/asr-test-data.git 
    - export ASR_TEST_DATA="$PWD"/asr-test-data
    - tox -e py39
  artifacts:
    paths:
      - .tox/.coverage*
    expire_in: 3 weeks

# -------------- Parallel tests --------------

python39-mpi:
  image: python:3.9
  stage: test
  script:
    - apt-get update -qy
    - apt-get install -qy libopenblas-dev libscalapack-mpi-dev libxc-dev
    - useradd -m user
    - su user -c 'tox -e py39-mpi'

# -------------- Integration tests --------------

python38-gpaw:
  image: python:3.8
  stage: integrationtest
  script:
    - apt-get update -qy
    - apt-get install -qy libopenblas-dev liblapack-dev libxc-dev
    - tox -e py38-gpaw
  artifacts:
    paths:
      - .tox/.coverage*
    expire_in: 3 weeks

python39-gpaw:
  image: python:3.9
  stage: integrationtest
  script:
    - apt-get update -qy
    - apt-get install -qy libopenblas-dev liblapack-dev libxc-dev
    - tox -e py39-gpaw
  artifacts:
    paths:
      - .tox/.coverage*
    expire_in: 3 weeks

# -------------- Coverage --------------
coverage:
  image: python:3.9
  stage: coverage
  script:
    - tox -e coverage-report
  coverage: '/TOTAL.+ ([0-9]+\.[0-9]+%)/'
  artifacts:
    paths:
      - .tox/htmlcov/
    expire_in: 3 weeks

# -------------- Deploy coverage report --------------
pages:
  stage: deploy
  dependencies:
    - coverage
  script:
    - mv .tox/htmlcov public
  artifacts:
    paths:
      - public
    expire_in: 3 weeks
  only:
    - master


# -------------- Release --------------
# (Only on git tagged commit)
release:
  stage: release
  script: tox -e release
  artifacts:
    paths:
      - dist
    expire_in: 3 weeks
  only:
    - tags
